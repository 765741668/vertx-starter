spring:
  # H2 DATABASE CONFIG
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    #hikari数据库连接池
    hikari:
      pool-name: Vertx_HikariCP
      auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
      connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
      idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）,0表示久不删除空闲连接
      minimum-idle: 5 #最小空闲连接数量
      maximum-pool-size: 500 #连接池最大连接数，默认是10
      max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      connection-test-query: SELECT 1
      initializationFailTimeout: 1 #如果池在此时间内无法成功初始化连接，则此属性控制池是否将“快速失败”，默认1ms
      isolateInternalQueries: false #确定HikariCP是否在其自己的事务中隔离内部池查询，例如连接活动测试，仅适用于autoCommit禁用的情况。 默认值：false
      validationTimeout: 5000 #控制连接测试活动的最长时间 必须小于connectionTimeout
      leakDetectionThreshold: 0 #控制在记录消息之前连接可能离开池的时间量，表明可能存在连接泄漏。值为0意味着泄漏检测被禁用,最低可接受值为2000（2秒）

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.orochi.vertx.entity

#webApi扫描包路径
controller-api-packages: com.orochi.starter.service.controller
#异步服务扫描包路径
async-service-impl-packages: com.orochi.starter.service.service.impl,com.orochi.starter.service.service2.impl
#Http服务器端口号
http-server-port: 8899
#工作线程池大小
worker-pool-size: 100
#异步服务实例数，建议与CPU核数相同
async-service-instances: 4
event-bus-connect-timeout: 10000
#是否开启智能MVC路由, true: 开启智能MVC模式性能低,但符合传统编码风格，false：使用手动注册路由方式性能高，但每个接口需要手动进行路由注册
enable.mvc: false
